package cibertec;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;

public class Tienda extends JFrame implements ActionListener {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	
	// Datos mínimos de la primera refrigeradora
	public static String modelo0 = "LG LTCS20020W";
	public static double precio0 = 949.0;
	public static double fondo0 = 58.6;
	public static double ancho0 = 60.0;
	public static double alto0 = 91.0;
	// Datos mínimos de la segunda refrigeradora
	public static String modelo1 = "Samsung RB195ACRS";
	public static double precio1 = 1089.0;
	public static double ancho1 = 80.0;
	public static double alto1 = 94.0;
	public static double fondo1 = 67.5;
	// Datos mínimos de la tercera refrigeradora
	public static String modelo2 = " Whirlpool WRT318FZDM";
	public static double precio2 = 850.0;
	public static double ancho2 = 60.0;
	public static double alto2 = 90.0;
	public static double fondo2 = 50.0;
	// Datos mínimos de la cuarta refrigeradora
	public static String modelo3 = "Bosch B36BT930NS";
	public static double precio3 = 629.0;
	public static double ancho3 = 61.6;
	public static double alto3 = 95.0;
	public static double fondo3 = 51.5;
	// Datos mínimos de la quinta refrigeradora
	public static String modelo4 = "LG LSXS26366S";
	public static double precio4 = 849.0;
	public static double ancho4 = 75.4;
	public static double alto4 = 94.5;
	public static double fondo4 = 66.0;
	public static int quemadores4 = 5;
	// Porcentajes de descuento
	public static double porcentaje1 = 7.5;
	public static double porcentaje2 = 10.0;
	public static double porcentaje3 = 12.5;
	public static double porcentaje4 = 15.0;
	// Obsequios
	public static String obsequio1 = "Cafetera";
	public static String obsequio2 = "Licuadora";
	public static String obsequio3 = "Extractor";
	// Cantidad óptima de unidades vendidas
	public static int cantidadOptima = 30;
	// Cuota diaria
	public static double cuotaDiaria = 75000;
	
	
	private JMenuBar menuBar;
	private JMenu mnNewMenu;
	private JMenuItem btnMenuSalir;
	private JMenu mnNewMenu_1;
	private JMenu mnNewMenu_2;
	private JMenu mnNewMenu_3;
	private JMenu mnNewMenu_4;
	private JMenuItem btnMenuConsultarRefrigeradora;
	private JMenuItem btnMenuListarRefrigeradoras;
	private JMenuItem btnMenuVender;
	private JMenuItem btnMenuGenerarReportes;
	private JMenuItem btnMenuConfigurarDescuentos;
	private JMenuItem btnMenuConfigurarObsequios;
	private JMenuItem btnMenuConfigurarCantidadOptima;
	private JMenuItem btnMenuConfigurarCuotaDiaria;
	private JMenuItem btnMenuAcercaDeTienda;
	private JMenuItem btnMenuModificarRefrigeradora;
	
	private JMenu[] menus;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}
		catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Tienda frame = new Tienda();
					frame.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Tienda() {
		setTitle("Tienda 1.0");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setExtendedState(JFrame.MAXIMIZED_BOTH);
		setBounds(100, 100, 762, 465);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		mnNewMenu = new JMenu("Archivo");
		menuBar.add(mnNewMenu);
		
		btnMenuSalir = new JMenuItem("Salir");
		btnMenuSalir.addActionListener(this);
		mnNewMenu.add(btnMenuSalir);
		
		mnNewMenu_1 = new JMenu("Mantenimiento");
		menuBar.add(mnNewMenu_1);
		
		btnMenuConsultarRefrigeradora = new JMenuItem("Consultar refrigeradora");
		btnMenuConsultarRefrigeradora.addActionListener(this);
		mnNewMenu_1.add(btnMenuConsultarRefrigeradora);
		
		btnMenuModificarRefrigeradora = new JMenuItem("Modificar refrigeradora");
		btnMenuModificarRefrigeradora.addActionListener(this);
		mnNewMenu_1.add(btnMenuModificarRefrigeradora);
		
		btnMenuListarRefrigeradoras = new JMenuItem("Listar refrigeradoras");
		btnMenuListarRefrigeradoras.addActionListener(this);
		mnNewMenu_1.add(btnMenuListarRefrigeradoras);
		
		mnNewMenu_2 = new JMenu("Ventas");
		menuBar.add(mnNewMenu_2);
		
		btnMenuVender = new JMenuItem("Vender");
		btnMenuVender.addActionListener(this);
		mnNewMenu_2.add(btnMenuVender);
		
		btnMenuGenerarReportes = new JMenuItem("Generar reportes");
		btnMenuGenerarReportes.addActionListener(this);
		mnNewMenu_2.add(btnMenuGenerarReportes);
		
		mnNewMenu_3 = new JMenu("Configuraci\u00F3n");
		menuBar.add(mnNewMenu_3);
		
		btnMenuConfigurarDescuentos = new JMenuItem("Configurar descuentos");
		btnMenuConfigurarDescuentos.addActionListener(this);
		mnNewMenu_3.add(btnMenuConfigurarDescuentos);
		
		btnMenuConfigurarObsequios = new JMenuItem("Configurar obsequios");
		btnMenuConfigurarObsequios.addActionListener(this);
		mnNewMenu_3.add(btnMenuConfigurarObsequios);
		
		btnMenuConfigurarCantidadOptima = new JMenuItem("Configurar cantidad \u00F3ptima");
		btnMenuConfigurarCantidadOptima.addActionListener(this);
		mnNewMenu_3.add(btnMenuConfigurarCantidadOptima);
		
		btnMenuConfigurarCuotaDiaria = new JMenuItem("Configurar cuota diaria");
		btnMenuConfigurarCuotaDiaria.addActionListener(this);
		mnNewMenu_3.add(btnMenuConfigurarCuotaDiaria);
		
		mnNewMenu_4 = new JMenu("Ayuda");
		menuBar.add(mnNewMenu_4);
		
		btnMenuAcercaDeTienda = new JMenuItem("Acerca de tienda");
		btnMenuAcercaDeTienda.addActionListener(this);
		mnNewMenu_4.add(btnMenuAcercaDeTienda);
		
		menus = new JMenu[] { mnNewMenu, mnNewMenu_1, mnNewMenu_2, mnNewMenu_3, mnNewMenu_4 };
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnMenuAcercaDeTienda) {
			actionPerformedBtnMenuAcercaDeTienda(e);
		}
		if (e.getSource() == btnMenuConfigurarCuotaDiaria) {
			actionPerformedBtnMenuConfigurarCuotaDiaria(e);
		}
		if (e.getSource() == btnMenuConfigurarCantidadOptima) {
			actionPerformedBtnMenuConfigurarCantidadOptima(e);
		}
		if (e.getSource() == btnMenuConfigurarObsequios) {
			actionPerformedBtnMenuConfigurarObsequios(e);
		}
		if (e.getSource() == btnMenuConfigurarDescuentos) {
			actionPerformedBtnMenuConfigurarDescuentos(e);
		}
		if (e.getSource() == btnMenuGenerarReportes) {
			actionPerformedBtnMenuGenerarReportes(e);
		}
		if (e.getSource() == btnMenuVender) {
			actionPerformedBtnMenuVender(e);
		}
		if (e.getSource() == btnMenuListarRefrigeradoras) {
			actionPerformedBtnMenuListarRefrigeradora(e);
		}
		if (e.getSource() == btnMenuModificarRefrigeradora) {
			actionPerformedBtnMenuModificarRefrigeradora(e);
		}
		if (e.getSource() == btnMenuConsultarRefrigeradora) {
			actionPerformedBtnMenuConsultarRefrigeradora(e);
		}
		if (e.getSource() == btnMenuSalir) {
			actionPerformedMntmNewMenuItem(e);
		}
		
	}
	protected void actionPerformedMntmNewMenuItem(ActionEvent e) {
		System.exit(0);
	}
	
	protected void actionPerformedBtnMenuConsultarRefrigeradora(ActionEvent e) {
		ConsultarRefrigeradora dialog = new ConsultarRefrigeradora();
		dialog.setModal(true);
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	
	protected void actionPerformedBtnMenuModificarRefrigeradora(ActionEvent e) {
		ModificarRefrigeradora dialog = new ModificarRefrigeradora();
		dialog.setModal(true);
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	protected void actionPerformedBtnMenuListarRefrigeradora(ActionEvent e) {
		ListarRefrigeradoras dialog = new ListarRefrigeradoras();
		dialog.setModal(true);
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	protected void actionPerformedBtnMenuVender(ActionEvent e) {
		Vender dialog = new Vender();
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	protected void actionPerformedBtnMenuGenerarReportes(ActionEvent e) {
		GenerarReportes dialog = new GenerarReportes();
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	protected void actionPerformedBtnMenuConfigurarDescuentos(ActionEvent e) {
		ConfigurarDescuentos dialog = new ConfigurarDescuentos();
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	protected void actionPerformedBtnMenuConfigurarObsequios(ActionEvent e) {
		ConfigurarObsequios dialog = new ConfigurarObsequios();
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	protected void actionPerformedBtnMenuConfigurarCantidadOptima(ActionEvent e) {
		ConfigurarCantidadOptima dialog = new ConfigurarCantidadOptima();
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	protected void actionPerformedBtnMenuConfigurarCuotaDiaria(ActionEvent e) {
		ConfigurarCuotaDiaria dialog = new ConfigurarCuotaDiaria();
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
	protected void actionPerformedBtnMenuAcercaDeTienda(ActionEvent e) {
		AcercaDeTienda dialog = new AcercaDeTienda();
		dialog.setLocationRelativeTo(this);
		dialog.setVisible(true);
	}
}
